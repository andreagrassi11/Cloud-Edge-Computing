stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

docker-build:
  image: docker:20.10.16
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker-compose build
    - docker tag quickshare_backend_web "$DOCKER_IMAGE_NAME"
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag quickshare_backend_web "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

docker-test:
  image: python:3.11
  stage: test
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apt-get update && apt-get install -y curl build-essential libpython3-dev
    - pip install --upgrade pip setuptools wheel cython pipenv docker-compose
    - python -m venv venv
    - . venv/bin/activate
    - pipenv install --system --deploy --ignore-pipfile
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker compose up -d
    - sleep 10
    - docker ps -a
    - curl --fail http://localhost:8000 || (echo "Container non risponde!" && exit 1)
    - docker compose down
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'



