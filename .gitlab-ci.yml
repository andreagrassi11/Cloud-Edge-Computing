stages:
  - build
  - test


docker-build:
  # Use the official docker image.
  image: docker/compose:alpine
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker-compose build
    - docker tag myapp_web $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag myapp_web $CI_REGISTRY_IMAGE:latest
        docker push $CI_REGISTRY_IMAGE:latest
      fi
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - docker-compose.yml


# TEST STAGE
docker-test:
  image: docker/compose:alpine
  stage: test
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

  before_script:
    - apk add --no-cache curl
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker-compose pull
    - docker-compose up -d
    - sleep 10
    - curl --fail http://localhost:8000 || (echo "Container non risponde!" && exit 1)
    - docker-compose down
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
